name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.20.x]
        os: [linux, windows, darwin]
        arch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build binary
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o myapp-${{ matrix.os }}-${{ matrix.arch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: myapp-${{ matrix.os }}-${{ matrix.arch }}
          path: myapp-${{ matrix.os }}-${{ matrix.arch }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: myapp-${{ matrix.os }}-${{ matrix.arch }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: myapp-*
          asset_name: ${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}
          asset_content_type: application/octet-stream

